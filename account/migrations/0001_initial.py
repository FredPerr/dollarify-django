# Generated by Django 4.0.4 on 2022-05-04 00:06

import account.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('verbose', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.entity')),
            ],
            bases=('account.entity',),
        ),
        migrations.CreateModel(
            name='StockExchange',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.entity')),
                ('region', models.CharField(max_length=30)),
                ('timezone', models.CharField(default='UTC', max_length=12)),
                ('open_hour', models.DecimalField(decimal_places=2, default=9.5, max_digits=4)),
                ('close_hour', models.DecimalField(decimal_places=2, default=4.0, max_digits=4)),
                ('lunch_start_hour', models.DecimalField(decimal_places=2, default=None, max_digits=4, null=True)),
                ('lunch_end_hour', models.DecimalField(decimal_places=2, default=None, max_digits=4, null=True)),
            ],
            bases=('account.entity',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=18, null=True, validators=[account.validators.validate_phone_number])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockMarketAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.account')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='exchange_fk', to='account.stockexchange')),
            ],
            bases=('account.account',),
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('withdrew', models.BooleanField()),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_fk', to='account.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('motive', models.CharField(blank=True, max_length=24, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_payment', to='account.account')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_payment', to='account.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Paycheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('hours', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('period_start', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('over_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('over_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_paycheck', to='account.account')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_paycheck', to='account.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('interest_rate', models.DecimalField(decimal_places=2, default=1, max_digits=4)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_loan', to='account.account')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_loan', to='account.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_fundtransfer', to='account.account')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_fundtransfer', to='account.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_fk', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StockTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ticker', models.CharField(max_length=10)),
                ('bought_value', models.DecimalField(decimal_places=3, max_digits=10)),
                ('shares', models.IntegerField()),
                ('bought_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('sold_on', models.DateTimeField(null=True)),
                ('sold_value', models.DecimalField(decimal_places=3, max_digits=10)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_stocktrade', to='account.stockmarketaccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CheckingAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.account')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='host_fk', to='account.entity')),
            ],
            bases=('account.account',),
        ),
    ]
